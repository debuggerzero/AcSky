<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zero.acskybackend.repo.mapper.UserInfoMapper">

    <insert id="insertOneUserInfo">
        insert into user_info(`name`, `account`, `password`, `create_date`, `update_date`)
        values (#{name}, #{account}, #{password}, current_time, current_time);
    </insert>

    <insert id="insertUserInfoList" parameterType="java.util.List">
        insert into user_info(`name`, `account`, `password`, `create_date`, `update_date`)
        values
        <foreach collection="list" item="model" index="index" separator=",">
            (#{model.name}, #{model.account}, #{model.password}, current_time, current_time)
        </foreach>
    </insert>

    <update id="updateUserInfo">
        update
        user_info
        set
        <if test="name">
            name=#{name},
        </if>
        <if test="email != null">
            email=#{email},
        </if>
        <if test="phone != null">
            phone=#{phone},
        </if>
        <if test="profile != null">
            profile=#{profile},
        </if>
        <if test="avatar != null">
            avatar=#{avatar},
        </if>
        update_date=current_time
        where account=#{account};

        <if test="level != null">
            update
            user_role
            set
            role_id=#{level.id}
            where user_id=#{id}
        </if>
    </update>

    <update id="updateUserPassword">
        update
        user_info
        set
        password=#{password}
        where
        account=#{account}
    </update>

    <delete id="deleteUserInfo">
        update
        user_info
        set
        is_delete=1
        where
        id=#{id}
    </delete>

    <resultMap id="queryUserInfo" type="com.zero.acskybackend.model.po.UserInfo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="profile" property="profile"/>
        <result column="avatar" property="avatar"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="submit_cnt" property="submitCnt"/>
        <result column="pass_cnt" property="passCnt"/>
        <association property="level">
            <id column="role_id" property="id"/>
            <result column="describe" property="name"/>
        </association>
    </resultMap>

    <sql id="queryUserInfo">
        select
        user_info.id, user_info.name, user_info.account, user_info.password,
        user_info.email, user_info.phone, user_info.profile, user_info.avatar,
        user_info.create_date, user_info.update_date, role_id,
        system_role.describe,
        submit_cnt,
        pass_cnt
        from
        user_info, user_role, system_role ,(
        select
        user_info.id uid,
        count(pid) submit_cnt,
        count(distinct pid) pass_cnt
        from user_info
        left join history on user_info.id = history.uid
        group by user_info.id) as history
    </sql>

    <select id="queryUserInfo" resultMap="queryUserInfo" parameterType="com.zero.acskybackend.model.Query.UserInfoQuery">
        <include refid="queryUserInfo"/>
        <where>
            user_info.id = user_role.user_id
            and user_role.role_id = system_role.id
            and is_delete=0
            <if test="id!=null">
                and id=#id
            </if>
            <if test="account!=null">
                and (account=#{account} or email=#{account} or phone=#{account})
            </if>
        </where>
    </select>

    <select id="queryUserInfoList" resultMap="queryUserInfo">
        <include refid="queryUserInfo"/>
        <where>
            user_info.id = user_role.user_id
            and user_role.role_id = system_role.id
            and is_delete=0
        </where>
        order by pass_cnt desc, submit_cnt
        limit #{pageNumber}, #{pageSize}
    </select>

    <select id="queryTotalRecord" resultType="java.lang.Long">
        select count(*)
        from user_info
        <where>
            is_delete=0
        </where>
    </select>

</mapper>